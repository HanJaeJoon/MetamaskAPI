<!DOCTYPE html>
<html>
  <head>
    <%- include("./shared/header.ejs") %>
  </head>
  <body>
    <h3>1. Metamask API</h3>
    <button id="btn-connect" class="btn btn-primary">connect</button>
    <h5>account info</h5>
    <p class="info-text alert alert-secondary">
      Address: <span id="account-info"></span>
    </p>

    <h3>2. Opensea API</h3>
    <button id="btn-fetch" class="btn btn-primary">fetch</button>
    <h5>asset info</h5>
    <p id="asset-info" class="info-text alert alert-secondary"></p>
  </body>
  <script src="/metamask-onboarding.bundle.js"></script>
  <script type="text/javascript">
    window.user = {
      address: null,
    };

    const initialize = () => {
      const btnConnect = document.getElementById("btn-connect");
      const spanAccountInfo = document.getElementById("account-info");
      const btnFetch = document.getElementById("btn-fetch");
      const spanAssetInfo = document.getElementById("asset-info");

      const isMetaMaskInstalled = () => {
        const { ethereum } = window;
        return Boolean(ethereum && ethereum.isMetaMask);
      };

      const host = window.location.host;
      const onboarding = new MetaMaskOnboarding({ host });

      const onClickInstall = () => {
        btnConnect.innerText = "Onboarding in progress";
        btnConnect.disabled = true;
        onboarding.startOnboarding();
      };

      const onClickConnectAndGetAddress = async () => {
        btnConnect.innerHTML = `<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>Loading...`;
        btnConnect.disabled = true;

        try {
          ethereum
            .request({ method: "eth_requestAccounts" })
            .then(() => {
              getAddress();

              btnConnect.innerText = "Connected";
            })
            .catch((err) => {
              if (err.code === 4001) {
                console.log("Please connect to MetaMask.");
              } else {
                console.error(err);
              }

              btnConnect.innerText = "Connect";
              btnConnect.disabled = false;
            });
        } catch (error) {
          alert(error);
        }
      };

      const metaMaskClientCheck = () => {
        if (!isMetaMaskInstalled()) {
          btnConnect.innerText = "Click here to install MetaMask!";
          btnConnect.onclick = onClickInstall;
          btnConnect.disabled = false;
        } else {
          btnConnect.innerText = "Connect";
          btnConnect.onclick = onClickConnectAndGetAddress;
          btnConnect.disabled = false;
        }
      };

      const getAddress = async () => {
        const accounts = await ethereum.request({ method: "eth_accounts" });

        window.user.address = accounts[0] || null;

        if (window.user.address) {
          spanAccountInfo.innerText = window.user.address;
        }
      };

      btnFetch.addEventListener("click", async () => {
        fetch(`./api/fetchAssets/${window.user.address}`)
          .then((response) => {
            if (!response.ok) {
              throw Error(response.statusText);
            } else {
              return response.json();
            }
          })
          .then((data) => {
            spanAssetInfo.innerText = JSON.stringify(data, null, 4);
          })
          .catch((e) => {
            alert(error);
          });
      });

      metaMaskClientCheck();
    };

    window.addEventListener("DOMContentLoaded", initialize);
  </script>
</html>
